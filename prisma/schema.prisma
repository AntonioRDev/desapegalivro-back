generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  name String
  email String @unique
  password String
  address Address @relation(fields: [addressId], references: [id])
  addressId Int 
  phone String
  whatsapp String
  applications Application[]
  books DonatedBook[]
  createdAt DateTime @default(now())
  updatedAt DateTime?
  isDeleted Boolean @default(false)
}

model Address {
  id Int @id @default(autoincrement())
  user User?
  postalCode String
  street String
  neighborhood String
  city String
  state String
  uf String
  number String
  createdAt DateTime @default(now())
  updatedAt DateTime?
  isDeleted Boolean @default(false)
}

model Category {
  id Int @id @default(autoincrement())
  name String @unique
  books DonatedBook[]
  createdAt DateTime @default(now())
  updatedAt DateTime?
  isDeleted Boolean @default(false)
}

model Application {
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])
  userId Int
  book DonatedBook @relation(fields: [bookId], references: [id])
  bookId Int
  date DateTime @default(now())
  description String
  contact String
  isEmailSended Boolean @default(false)
}

model DonatedBook {
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])
  userId Int
  bookCoverUrl String
  category Category @relation(fields: [categoryId], references: [id])
  categoryId Int
  title String
  usageTime String
  author String
  pagesQty Int
  language String
  applicationsQty Int @default(0)
  applications Application[]
  isActive Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime?
  isDeleted Boolean @default(false)
}